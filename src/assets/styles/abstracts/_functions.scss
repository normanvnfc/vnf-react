// // -----------------------------------------------------------------------------
// // This file contains all application-wide Sass functions.
// // -----------------------------------------------------------------------------

// /// Native `url(..)` function wrapper
// /// @param {String} $base - base URL for the asset
// /// @param {String} $type - asset type folder (e.g. `fonts/`)
// /// @param {String} $path - asset path
// /// @return {Url}
// @use "sass:math";

// @function asset($base, $type, $path) {
//   @return url($base + $type + $path);
// }

// /// Returns URL to an image based on its path
// /// @param {String} $path - image path
// /// @param {String} $base [$base-url] - base URL
// /// @return {Url}
// /// @require $base-url
// @function image($path, $base: $base-url) {
//   @return asset($base, 'images/', $path);
// }

// /// Returns URL to a font based on its path
// /// @param {String} $path - font path
// /// @param {String} $base [$base-url] - base URL
// /// @return {Url}
// /// @require $base-url
// @function font($path, $base: $base-url) {
//   @return asset($base, 'fonts/', $path);
// }

// //  convert px to relative size em or rem
// // example:
// // font-size: em(12px);
// //
// // nested example:
// //.fine-print {
// //	$font-size: 10px;
// //	font-size: em($font-size);
// //	.title {
// //		font-size: em(10px, $font-size);
// //	}
// //}
// @function em($px, $base: $base-font-size) {
// 	@return math.div($px, $base) * 1em;
// }
// @function rem($px, $base: $base-font-size) {
// 	@return math.div($px, $base) * 1rem;
// }